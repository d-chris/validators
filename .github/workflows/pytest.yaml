name: pdm-pytest

on:
  push:
    branches:
      - develop/*
  workflow_dispatch:

env:
  PDM_CACHE_DIR: ${{ github.workspace }}/.cache/pdm

jobs:
  style:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        run: pipx --version || python -m pip install --user pipx

      - name: Install PDM
        run: pipx install pdm --python ${{ matrix.python-version }}

      - name: Cache PDM dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PDM_CACHE_DIR}}
          key: pdm-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            pdm-${{ runner.os }}-${{ matrix.python-version }}-
      
      - name: Install dependencies
        run: pdm install -G tooling -G crypto-eth-addresses
      
      - name: Format Code with Black
        run: pdm run black .

      - name: Lint Code with Ruff
        run: pdm run ruff check .

      - name: Type Check with Pyright
        run: pdm run pyright .

      - name: Run tests
        run: pdm run pytest

  linux:
    runs-on: ubuntu-latest
    needs: style
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        run: pipx --version || python -m pip install --user pipx

      - name: Install PDM
        run: pipx install pdm --python ${{ matrix.python-version }}

      - name: Cache PDM dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PDM_CACHE_DIR}}
          key: pdm-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            pdm-${{ runner.os }}-${{ matrix.python-version }}-
      
      - name: Install dependencies
        run: pdm install -G testing -G crypto-eth-addresses
      
      - name: Run tests
        run: pdm run pytest

  other:
    needs: linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        shell: bash
        run: pipx --version || python -m pip install --user pipx

      - name: Install PDM
        run: pipx install pdm --python ${{ matrix.python-version }}

      - name: Cache PDM dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PDM_CACHE_DIR}}
          key: pdm-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pdm.lock') }}
          restore-keys: |
            pdm-${{ runner.os }}-${{ matrix.python-version }}-
      
      - name: Install dependencies
        run: pdm install -G testing -G crypto-eth-addresses
      
      - name: Run tests
        run: pdm run pytest
